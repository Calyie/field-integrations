####
# file to http
####

CONCLUSION arbitrary-file-read = FLOW IO ((http OR $http OR httpClient OR $httpClient OR httpHeader OR $httpHeader OR httpClientHeader OR $httpClientHeader) AND NOT session) -> DATA (NOT escaped AND NOT encoded AND NOT customChecked AND NOT numeric) -> IO (filePath AND read AND NOT ftp AND NOT cloud)
WHEN CONCLUSION arbitrary-file-read => EMIT {
  title: "HTTP Data as File Path {{via `$paramname`}} {{in `$methodname`}}",
  description: "HTTP input data is used as part of a file path to read a file on the server without escaping or validation. This indicates a directory traversal vulnerability.",
  description_suffix_file: "io/shiftleft/descriptions/dir-trav.md",
  category: "a5-broken-access-control",
  score: "8.0",
  vulnerability_description: "Directory Traversal",
  link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control",
  cwe_category: "22"
}

CONCLUSION file-toctou = FLOW IO (pathCheck) -> IO (filePath)
WHEN CONCLUSION file-toctou => EMIT {
  title: "Check Followed by Read or Write Operation on Same File Path {{via `$paramname`}} {{in `$methodname`}}",
  description: "The same file path is used sequentially first in an existence or file property check and then in a read or write operation. This indicates a time-of-check time-of-use race condition. By sending multiple concurrent requests, an attacker can potentially subvert the existence or file property check in the timing window between the two file operations.",
  description_suffix_file: "io/shiftleft/descriptions/race-condition.md",
  category: "a5-broken-access-control",
  score: "3.0",
  vulnerability_description: "Race Condition",
  link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control",
  cwe_category: "367"
}

